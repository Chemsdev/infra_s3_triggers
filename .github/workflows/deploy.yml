name: Deploy S3 Triggers

on:
  push:
    branches:
      - main

jobs:
  deploy-s3-triggers:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ R√©cup√©ration du code
      - name: üì• Checkout du repo
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Python
      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # 3Ô∏è‚É£ Configuration des identifiants AWS
      - name: üîê Configurer les identifiants AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.ACCESS_KEY_ID_CHEMS }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY_CHEMS }}
          aws-region:            eu-central-1

      # 4Ô∏è‚É£ Installation de Terraform
      - name: üåç Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      # 5Ô∏è‚É£ Initialisation Terraform
      - name: Terraform Init
        run: terraform init

      # 6Ô∏è‚É£ Suppression des anciennes permissions Lambda (√©vite les conflits)
      - name: üßπ Supprimer anciennes permissions Lambda
        run: |
          for lambda in hubspot-pdf-ocr-processor hubspot-llm-generate-json hubspot-create-deal; do
            if aws lambda get-policy --function-name $lambda > /dev/null 2>&1; then
              aws lambda get-policy --function-name $lambda \
                | jq -r '.Policy | fromjson.Statement[]?.Sid' \
                | grep AllowExecutionFromS3Bucket \
                | while read sid; do
                    echo "Suppression de $sid pour $lambda"
                    aws lambda remove-permission --function-name $lambda --statement-id $sid || true
                  done
            fi
          done

      # 7Ô∏è‚É£ Affichage du plan
      - name: Terraform Plan
        run: terraform plan

      # 8Ô∏è‚É£ Application auto du plan
      - name: Terraform Apply
        env:
          TF_LOG: INFO
        run: terraform apply -auto-approve
